/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation project(':libgpio')
    implementation project(':libjna')

    implementation libs.org.netbeans.api.org.openide.util
    implementation libs.org.netbeans.api.org.openide.util.lookup
    implementation libs.commons.cli
    implementation libs.jna.module
    implementation libs.jna.platform

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation libs.junit.platform
    testImplementation libs.assertj.core

    annotationProcessor libs.org.netbeans.api.org.openide.util
    annotationProcessor libs.lombok

}

// Apply a specific Java toolchain to ease working on different environments.
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
//  withJavadocJar()
//  withSourcesJar()
}

application {
    // Define the main class for the application.
    mainClass = "${mainclass}"
    applicationDefaultJvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=9009']
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
//    into 'resources', {
//        from 'resources'
//    }
//    dependsOn build
    manifest {
        attributes 'Main-Class': "${mainclass}"
        attributes 'Verison': "${version}"
    }
}
