/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    api libs.org.netbeans.api.org.openide.util
    api libs.org.netbeans.api.org.openide.util.lookup
  
    testImplementation libs.junit.jupiter
    testImplementation libs.junit.platform
    testImplementation libs.assertj.core

    annotationProcessor libs.org.netbeans.api.org.openide.util

}

// Apply a specific Java toolchain to ease working on different environments.
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
  withJavadocJar()
  withSourcesJar()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
  publications {
    maven(MavenPublication) {
      //      groupId = $group
      //artifactId = "dcccontrol-$moduleArtifact"
      //      version = $version

      from components.java
    }
  }
}

javadoc {
  failOnError = false
}
